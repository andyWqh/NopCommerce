@model OrderTotalsModel
@using Nop.Web.Models.ShoppingCart;
<div class="total-info">
    <table class="cart-total">
        <tbody>
            <tr>
                <td class="cart-total-left">
                    <span>@T("ShoppingCart.Totals.SubTotal"):</span>
                </td>
                <td class="cart-total-right">
                    <span class="product-price">@Model.SubTotal</span>
                </td>
            </tr>
            @if (!String.IsNullOrEmpty(Model.SubTotalDiscount))
            {
                <tr>
                    <td class="cart-total-left">
                        <span>@T("ShoppingCart.Totals.SubTotalDiscount"):</span>
                    </td>
                    <td class="cart-total-right">
                        <span class="product-price">@Model.SubTotalDiscount</span>
                        @if (Model.AllowRemovingSubTotalDiscount)
                        {
                            <input type="submit" name="removesubtotaldiscount" value="@T("Common.Remove")" />
                        }
                    </td>
                </tr>
            }
            <tr>
                <td class="cart-total-left">
                    <span>
                        @T("ShoppingCart.Totals.Shipping")
                        @if (Model.RequiresShipping && !String.IsNullOrEmpty(Model.SelectedShippingMethod))
                        {
                            @T("ShoppingCart.Totals.Shipping.Method", Model.SelectedShippingMethod)
                        }
                        :
                    </span>
                </td>
                <td class="cart-total-right">
                    @if (Model.RequiresShipping)
                    {
                        if (!String.IsNullOrEmpty(Model.Shipping))
                        {
                        <span class="product-price">@Model.Shipping
                        </span>
                        }
                        else
                        {
                        <span>@T("ShoppingCart.Totals.CalculatedDuringCheckout")</span>
                        }
                    }
                    else
                    {
                        <span>@T("ShoppingCart.Totals.Shipping.NotRequired")</span>
                    }
                </td>
            </tr>
            @if (!String.IsNullOrEmpty(Model.PaymentMethodAdditionalFee))
            {
                <tr>
                    <td class="cart-total-left">
                        <span>@T("ShoppingCart.Totals.PaymentMethodAdditionalFee"):</span>
                    </td>
                    <td class="cart-total-right">
                        <span class="product-price">@Model.PaymentMethodAdditionalFee</span>
                    </td>
                </tr>
            }
            @if (Model.DisplayTaxRates && Model.TaxRates.Count > 0)
            {
                foreach (var taxRate in Model.TaxRates)
                {
                <tr>
                    <td class="cart-total-left">
                        <span>@string.Format(T("ShoppingCart.Totals.TaxRateLine").Text, taxRate.Rate):</span>
                    </td>
                    <td class="cart-total-right">
                        <span class="product-price">
                            @taxRate.Value
                        </span>
                    </td>
                </tr>
                }
            }
            @if (Model.DisplayTax)
            {
                <tr>
                    <td class="cart-total-left">
                        <span>@T("ShoppingCart.Totals.Tax"):</span>
                    </td>
                    <td class="cart-total-right">
                        <span class="product-price">@Model.Tax</span>
                    </td>
                </tr>
            }
            @if (!String.IsNullOrEmpty(Model.OrderTotalDiscount))
            {
                <tr>
                    <td class="cart-total-left">
                        <span>@T("ShoppingCart.Totals.OrderTotalDiscount"):</span>
                    </td>
                    <td class="cart-total-right">
                        <span class="product-price">@Model.OrderTotalDiscount</span>
                        @if (Model.AllowRemovingOrderTotalDiscount)
                        {
                            <input type="submit" name="removeordertotaldiscount" value="@T("Common.Remove")" />
                        }
                    </td>
                </tr>
            }
            @if (Model.GiftCards.Count > 0)
            {
                foreach (var gc in Model.GiftCards)
                {
                <tr>
                    <td class="cart-total-left">
                        <span>
                            @T("ShoppingCart.Totals.GiftCardInfo", gc.CouponCode):
                        </span>
                    </td>
                    <td class="cart-total-right">
                        <span class="product-price">@gc.Amount</span>
                        @if (Model.IsEditable)
                        {
                            <input type="submit" name="removegiftcard-@gc.Id" value="@T("Common.Remove")" class="remove-gift-card-button" />
                        }
                    </td>
                </tr>
                <tr>
                    <td class="cart-total-left-below">
                        @string.Format(T("ShoppingCart.Totals.GiftCardInfo.Remaining").Text, gc.Remaining)
                    </td>
                    <td>
                    </td>
                </tr>
                }
            }
            @if (Model.RedeemedRewardPoints > 0)
            {
                <tr>
                    <td class="cart-total-left">
                        <span>@string.Format(T("ShoppingCart.Totals.RewardPoints").Text, Model.RedeemedRewardPoints):</span>
                    </td>
                    <td class="cart-total-right">
                        <span class="product-price">@Model.RedeemedRewardPointsAmount</span>
                    </td>
                </tr>
            }
            <tr>
                <td class="cart-total-left">
                    <span>@T("ShoppingCart.Totals.OrderTotal"):</span>
                </td>
                <td class="cart-total-right">
                    @if (!String.IsNullOrEmpty(Model.OrderTotal))
                    {
                        <span class="product-price order-total"><strong>@Model.OrderTotal</strong></span>
                    }
                    else
                    {
                        <span>@T("ShoppingCart.Totals.CalculatedDuringCheckout")</span>
                    }
                </td>
            </tr>
        </tbody>
    </table>
</div>
